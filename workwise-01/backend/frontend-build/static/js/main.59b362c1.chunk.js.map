{"version":3,"sources":["services/api.js","pages/Login.js","pages/Register.js","pages/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","headers","Login","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","onSubmit","async","e","preventDefault","response","post","localStorage","setItem","data","access","refresh","loginUser","err","type","placeholder","value","onChange","target","Register","registerUser","Dashboard","user","setUser","useEffect","profile","get","userId","Authorization","getItem","getUserProfile","console","fetchProfile","email","first_name","last_name","App","Router","Link","to","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.59b362c1.chunk.js","sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: { 'Content-Type': 'application/json' }\n});\n\n// Register a new user\nexport const registerUser = async (username, password) => {\n    const response = await api.post('/accounts/register/', { username, password });\n    return response.data;\n};\n\n// Login user and save tokens\nexport const loginUser = async (username, password) => {\n    const response = await api.post('/accounts/token/', { username, password });\n    localStorage.setItem('access', response.data.access);\n    localStorage.setItem('refresh', response.data.refresh);\n    return response.data;\n};\n\n// Get user profile with token\nexport const getUserProfile = async (userId) => {\n    const response = await api.get(`/accounts/users/${userId}/`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access')}` }\n    });\n    return response.data;\n};\n\n// Refresh access token\nexport const refreshToken = async () => {\n    const response = await api.post('/accounts/token/refresh/', {\n        refresh: localStorage.getItem('refresh')\n    });\n    localStorage.setItem('access', response.data.access);\n    return response.data;\n};\n\n// Logout user\nexport const logoutUser = () => {\n    localStorage.removeItem('access');\n    localStorage.removeItem('refresh');\n};\n","// src/pages/Login.js\nimport React, { useState } from 'react';\nimport { loginUser } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            await loginUser(username, password);\n            navigate('/dashboard');\n        } catch (err) {\n            setError('Login failed. Please check your credentials.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            {error && <p>{error}</p>}\n            <form onSubmit={handleLogin}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n","// src/pages/Register.js\nimport React, { useState } from 'react';\nimport { registerUser } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        try {\n            await registerUser(username, password);\n            navigate('/login');\n        } catch (err) {\n            setError('Registration failed. Username may already exist.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            {error && <p>{error}</p>}\n            <form onSubmit={handleRegister}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n","// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { getUserProfile } from '../services/api';\n\nconst Dashboard = () => {\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const fetchProfile = async () => {\n            try {\n                const profile = await getUserProfile(1); // Assuming user ID 1 for testing\n                setUser(profile);\n            } catch (err) {\n                console.error('Error fetching profile');\n            }\n        };\n        fetchProfile();\n    }, []);\n\n    if (!user) return <p>Loading...</p>;\n\n    return (\n        <div>\n            <h2>Welcome, {user.username}</h2>\n            <p>Email: {user.email}</p>\n            <p>First Name: {user.first_name}</p>\n            <p>Last Name: {user.last_name}</p>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\n\nconst App = () => (\n    <Router>\n        <nav>\n            <Link to=\"/login\">Login</Link> | <Link to=\"/register\">Register</Link>\n        </nav>\n        <Routes>\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n        </Routes>\n    </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}